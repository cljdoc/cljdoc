<?xml version="1.0" encoding="UTF-8"?>
<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">
  <suppress>
    <notes><![CDATA[
    Applies to jruby versions less than v1.4.1, as of this writing, we are at v9
    ]]></notes>
    <packageUrl regex="true">^pkg:maven/(org\.jruby/dirgra|rubygems/jruby\-readline)@.*$</packageUrl>
    <cve>CVE-2010-1330</cve>
  </suppress>
  <suppress>
   <notes><![CDATA[
   Applies to jruby versions less than v1.6.5.1, as of this writing, we are at v9
   ]]></notes>
   <packageUrl regex="true">^pkg:maven/(org\.jruby/dirgra|rubygems/jruby\-readline)@.*$</packageUrl>
   <cve>CVE-2011-4838</cve>
  </suppress>
  <suppress>
    <notes><![CDATA[
    JRuby's Java re-implementation of OpenSSL is falsely detected as the C implmentation of OpenSSL
    ]]></notes>
    <packageUrl regex="true">^pkg:maven/rubygems/jruby\-openssl@.*$</packageUrl>
    <cpe>cpe:/a:openssl:openssl</cpe>
    <cpe>cpe:/a:jruby:jruby</cpe>
  </suppress>
  <suppress>
   <notes><![CDATA[
   file name: jsch.agentproxy.usocket-nc-0.0.9.jar
   I don't know why this was being associated with netcat cpe, but I see no evidence on the web of
   this lib itself having security issues.
   ]]></notes>
   <packageUrl regex="true">^pkg:maven/com\.jcraft/jsch\.agentproxy\.usocket\-nc@.*$</packageUrl>
   <cpe>cpe:/a:netcat:netcat</cpe>
  </suppress>
  <suppress>
   <notes><![CDATA[
   file name: core.async-1.5.648.jar
   False match with https://github.com/caolan/async
   ]]></notes>
   <packageUrl regex="true">^pkg:maven/org\.clojure/core\.async@.*$</packageUrl>
   <cpe>cpe:/a:async_project:async</cpe>
  </suppress>
  <suppress>
   <notes><![CDATA[
   file name: snappy-0.4.jar
   How a vulnerability in the Python Electrum project matched snappy, I dunno! False positive.
   ]]></notes>
   <packageUrl regex="true">^pkg:maven/org\.iq80\.snappy/snappy@.*$</packageUrl>
   <cve>CVE-2018-6353</cve>
  </suppress>
  <suppress>
   <notes><![CDATA[
   file name: data.priority-map-1.1.0.jar
   ]]></notes>
   <packageUrl regex="true">^pkg:maven/org\.clojure/data\.priority\-map@.*$</packageUrl>
   <cpe>cpe:/a:priority-software:priority</cpe>
  </suppress>
  <suppress>
   <notes><![CDATA[
   Google has marked the risky Guava function as deprecated and, at the time of this writing, will do no more.
   https://github.com/google/guava/issues/4011
   Guava is brought in by by owasp-java-html-sanitizer.
   ]]></notes>
   <cve>CVE-2020-8908</cve>
  </suppress>
  <suppress>
   <notes><![CDATA[
   disputed: https://github.com/FasterXML/jackson-databind/issues/3972
   ]]></notes>
   <cve>CVE-2023-35116</cve>
  </suppress>
  <suppress>
   <notes><![CDATA[
   CVE-2023-4759 was addressed in jgit 6.7.0 and should not be triggered (but still is)
   ]]></notes>
   <cpe>cpe:/a:eclipse:jgit:6.7.0:202309050840</cpe>
  </suppress>
  <suppress>
   <notes><![CDATA[
   Description: In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.
   Is falsely matching on various clojure libs, not clojure itself.
   We are using current vesion of clojure. So suppress.
   ]]></notes>
   <cve>CVE-2017-20189</cve>
  </suppress>
  <suppress>
   <notes><![CDATA[
     Jetty toolchain lib versioning is idependent of Jetty release.
   ]]></notes>
   <packageUrl regex="true">^pkg:maven/org\.eclipse\.jetty\.toolchain/.*@.*$</packageUrl>
   <cpe>cpe:/a:jetty:jetty</cpe>
   <cpe>cpe:/a:eclipse:jetty</cpe>
  </suppress>
  <suppress>
   <notes><![CDATA[
     This CVE is described as: An issue in Clojure versions 1.20 to 1.12.0-alpha5 allows an attacker to cause a denial of service (DoS) via the clojure.core$partial$fn__5920 function.
     False positive; cljdoc uses a later version of clojure
   ]]></notes>
   <cve>CVE-2024-22871</cve>
  </suppress>
</suppressions>
